55
55
knapsack naive algorithm
 else weights[index] < target weights[index] 5 true
case 1
index-> 4 index-1 3 target-> 10
 else weights[index] < target weights[index] 2 true
case 1
index-> 3 index-1 2 target-> 10
 else weights[index] < target weights[index] 4 true
case 1
index-> 2 index-1 1 target-> 10
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 10
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 10
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 10 target - weight[index] 9
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 10 target - weight[index] 8
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 8
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 8 target - weight[index] 7
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
current 8
case 2
index-> 2 value[index]-> 5 index-1 1 target-> 10 target - weight[index] 6
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 6
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 6
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 6 target - weight[index] 5
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 6 target - weight[index] 4
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 4
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 4 target - weight[index] 3
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
currentPlusOther 13
current 8 currentPlusOther 13
13
current 13
case 2
index-> 3 value[index]-> 3 index-1 2 target-> 10 target - weight[index] 8
 else weights[index] < target weights[index] 4 true
case 1
index-> 2 index-1 1 target-> 8
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 8
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 8
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 8 target - weight[index] 7
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 8 target - weight[index] 6
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 6
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 6 target - weight[index] 5
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
current 8
case 2
index-> 2 value[index]-> 5 index-1 1 target-> 8 target - weight[index] 4
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 4
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 4
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 4 target - weight[index] 3
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 4 target - weight[index] 2
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 2
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 2 target - weight[index] 1
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
currentPlusOther 13
current 8 currentPlusOther 13
13
currentPlusOther 16
current 13 currentPlusOther 16
16
current 16
case 2
index-> 4 value[index]-> 2 index-1 3 target-> 10 target - weight[index] 5
 else weights[index] < target weights[index] 2 true
case 1
index-> 3 index-1 2 target-> 5
 else weights[index] < target weights[index] 4 true
case 1
index-> 2 index-1 1 target-> 5
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 5
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 5
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 5 target - weight[index] 4
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 5 target - weight[index] 3
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 3
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 3 target - weight[index] 2
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
current 8
case 2
index-> 2 value[index]-> 5 index-1 1 target-> 5 target - weight[index] 1
 else if weights[index] > target weights[index] 2 true
index-> 1 index-1 0 target-> 1
 else weights[index] < target weights[index] 1 false
case 1
index-> 0 index-1 -1 target-> 1
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 1 target - weight[index] 0
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
result 5
currentPlusOther 10
current 8 currentPlusOther 10
10
current 10
case 2
index-> 3 value[index]-> 3 index-1 2 target-> 5 target - weight[index] 3
 else if weights[index] > target weights[index] 4 true
index-> 2 index-1 1 target-> 3
 else weights[index] < target weights[index] 2 true
case 1
index-> 1 index-1 0 target-> 3
 else weights[index] < target weights[index] 1 true
case 1
index-> 0 index-1 -1 target-> 3
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 3 target - weight[index] 2
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
current 5
case 2
index-> 1 value[index]-> 3 index-1 0 target-> 3 target - weight[index] 1
 else weights[index] < target weights[index] 1 false
case 1
index-> 0 index-1 -1 target-> 1
index and target less than 0
result is 0
current 0
case 2
index-> 0 value[index]-> 5 index-1 -1 target-> 1 target - weight[index] 0
index and target less than 0
result is 0
currentPlusOther 5
current 0 currentPlusOther 5
5
currentPlusOther 8
current 5 currentPlusOther 8
8
result 8
currentPlusOther 11
current 10 currentPlusOther 11
11
currentPlusOther 13
current 16 currentPlusOther 13
16
16
